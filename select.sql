-- select.sql
-- Author: Yana Popova

-- DO NOT use these SQL commands:
-- CREATE SCHEMA 
-- USE 


-- 1. Average Female Salary
SELECT AVG(DAILYSALARY) AS AVG_DAILY_SALARY_FEMALE_PART
FROM PARTICIPANT
WHERE GENDER = 'Female'; 


-- 2. Coaching Report
-- We list all of the information for the coaches + the number of contenders they are coaching
-- In the specifications it is not said whetherto include only the name of the coach or the 
-- whole information about them, so I chose the whole information
SELECT COACH.*, count(CONTENDER.IDCOACH) as NUMBER_OF_CONTENDERS      
FROM COACH
LEFT JOIN CONTENDER
	ON (CONTENDER.IDCOACH = COACH.IDCOACH)
GROUP BY
    COACH.IDCOACH; 


-- 3. Coach Monthly Attendance Report
-- For every coach, their name, surname, id, attendence in March and Attendence in april is listed.
SELECT x.NAME, x.SURNAME, x.IDCOACH,  ATTENDENCE_IN_MARCH, ATTENDENCE_IN_APRIL
FROM
	(SELECT NAME, SURNAME, COACH.IDCOACH, COUNT(COACHINSHOW.IDCOACH) AS ATTENDENCE_IN_MARCH
	FROM COACH, TVSHOW, COACHINSHOW
	WHERE TVSHOW.DATESHOW LIKE '______3___' AND TVSHOW.IDSHOW = COACHINSHOW.IDSHOW AND COACH.IDCOACH = COACHINSHOW.IDCOACH
	GROUP BY IDCOACH) x
INNER JOIN
	(SELECT NAME, SURNAME, COACH.IDCOACH, COUNT(COACHINSHOW.IDCOACH) AS ATTENDENCE_IN_APRIL
	FROM COACH, TVSHOW, COACHINSHOW
	WHERE TVSHOW.DATESHOW LIKE '______4___' AND TVSHOW.IDSHOW = COACHINSHOW.IDSHOW AND COACH.IDCOACH = COACHINSHOW.IDCOACH
	GROUP BY IDCOACH) y
ON x.IDCOACH = y.IDCOACH; 


-- 4. Most Expensive Contender
-- List the stage name of the best paid contender
SELECT STAGENAME
FROM
	(SELECT CONTENDER.STAGENAME, SUM(DAILYSALARY) AS CONTENDER_DAILY_SALARY
	FROM CONTENDER, PARTICIPANT
	WHERE PARTICIPANT.IDCONTENDER = CONTENDER.IDCONTENDER
	GROUP BY CONTENDER.IDCONTENDER
	ORDER BY CONTENDER_DAILY_SALARY DESC) X
LIMIT 1;

-- 5. March Payment Report
SELECT CONCAT(NAME, " ", SURNAME) AS COACH_NAME, COUNT(COACHINSHOW.IDCOACH) AS SHOWS_ATTENDED_IN_MARCH, DAILYSALARY AS DAILY_SALARY,  COUNT(COACHINSHOW.IDCOACH)*DAILYSALARY AS TOTAL_SALARY_IN_MARCH
FROM COACH, TVSHOW, COACHINSHOW
WHERE TVSHOW.DATESHOW LIKE '______3___' AND TVSHOW.IDSHOW = COACHINSHOW.IDSHOW AND COACH.IDCOACH = COACHINSHOW.IDCOACH
GROUP BY COACH.IDCOACH;

SELECT CONCAT(NAME, " ", SURNAME) AS PARTICIPANT_NAME, COUNT(CONTENDERINSHOW.IDCONTENDER) AS SHOWS_ATTENDED_IN_MARCH, DAILYSALARY AS DAILY_SALARY,  COUNT(CONTENDERINSHOW.IDCONTENDER)*DAILYSALARY AS TOTAL_SALARY_IN_MARCH
FROM PARTICIPANT, CONTENDER, CONTENDERINSHOW, TVSHOW
WHERE TVSHOW.DATESHOW LIKE '______3___' AND TVSHOW.IDSHOW = CONTENDERINSHOW.IDSHOW AND CONTENDER.IDCONTENDER = CONTENDERINSHOW.IDCONTENDER and CONTENDER.IDCONTENDER = PARTICIPANT.IDCONTENDER
GROUP BY PARTICIPANT.IDPARTICIPANT;

SELECT SUM(TOTAL_SALARY_IN_MARCH) AS TOTAL_AMOUNT_TO_BE_PAID_IN_MARCH
FROM
	(SELECT CONCAT(NAME, " ", SURNAME) AS FULL_NAME, COUNT(COACHINSHOW.IDCOACH) AS SHOWS_ATTENDED_IN_MARCH, DAILYSALARY AS DAILY_SALARY,  COUNT(COACHINSHOW.IDCOACH)*DAILYSALARY AS TOTAL_SALARY_IN_MARCH
	FROM COACH, TVSHOW, COACHINSHOW
	WHERE TVSHOW.DATESHOW LIKE '______3___' AND TVSHOW.IDSHOW = COACHINSHOW.IDSHOW AND COACH.IDCOACH = COACHINSHOW.IDCOACH
	GROUP BY COACH.IDCOACH
	UNION
	SELECT CONCAT(NAME, " ", SURNAME) AS FULL_NAME, COUNT(CONTENDERINSHOW.IDCONTENDER) AS SHOWS_ATTENDED_IN_MARCH, DAILYSALARY AS DAILY_SALARY,  COUNT(CONTENDERINSHOW.IDCONTENDER)*DAILYSALARY AS TOTAL_SALARY_IN_MARCH
	FROM PARTICIPANT, CONTENDER, CONTENDERINSHOW, TVSHOW
	WHERE TVSHOW.DATESHOW LIKE '______3___' AND TVSHOW.IDSHOW = CONTENDERINSHOW.IDSHOW AND CONTENDER.IDCONTENDER = CONTENDERINSHOW.IDCONTENDER and CONTENDER.IDCONTENDER = PARTICIPANT.IDCONTENDER
	GROUP BY PARTICIPANT.IDPARTICIPANT) A; 


-- 6. Well Formed Groups!
-- I created a non well formed group - the group contender 'The Magician', who has only one participant, 
-- Tony Brown - to check whether the next statement works. 
-- The result of the next statement should be False, as there is a violation
-- of the regulation that group contenders must be formed by more than 1 participants.
-- After that I will leave the non well formed group, because it has not been
-- said in the specifications that I have to delete it.
INSERT INTO CONTENDER 
VALUES
	('12350','The Magician', 'group', '12345612');
INSERT INTO PARTICIPANT
VALUES
	('12343399', 'Tony', 'Brown', '1992-06-21', '+441298857890', 600, 'Male', '12350');
	
SELECT IF(SUM(COL) = COUNT(CONTENDER.IDCONTENDER), True, False) AS CONTENDER_TYPE_VIOLATION
FROM
	(SELECT CONTENDER.STAGENAME AS CONTENDER_NAME, COUNT(PARTICIPANT.IDCONTENDER) AS PARTICIPANTS_IN_CONTENDER, IF(COUNT(PARTICIPANT.IDCONTENDER) < 2 AND CONTENDER.TYPE = 'group', 0, 1) AS COL
	FROM CONTENDER, PARTICIPANT
	WHERE CONTENDER.IDCONTENDER = PARTICIPANT.IDCONTENDER
	GROUP BY CONTENDER.IDCONTENDER) a, CONTENDER; 
	

